Build script: mvn clean compile assembly:single test
Submit scripts: /course/cs1440/bin/cs1440_handin AdXFinal

Campaign: (segment, reach, budget, start, end)
reach = budget for "free" campaigns
statistics = {campaign #, (num impressions, dollars spent)}

Level 1 TA bots bid (budget-spent)/(reach-impressions):
    - we can beat this by bidding 0.9 on just our segment (no campaign bidding)

Effective reach
    - ER = sigmoidal in [0, 1.38442]
    - profit = ER * Budget - Cost

Quality Score:
    - QS_t+1 = (QS_t + ER) / 2
    - affects campaign bidding

Effective Bid (for Campaigns):
    - EB = bid/QS
    - rewarded for higher quality score

General Thoughts:
    - We don't want every campaign, just good ones
        - This reduces negative campaigns
    - We want overlapping campaigns
        - We can control the price
    - Bid more when urgent (something sine-like)













##################################
Part 1: Bidding on Campaigns
##################################

Lowest bidder wins and gets the campaign with
budget equal to the second highest bid. 

So, we want to bid what we think the campaign 
is worth. Not sure how to figure this out?
What's considered a good campaign vs bad?

##################################
Part 2: Deep Learning Models
##################################

Input - vector of size (26) comprised of the following:
    - 20 segments, represented as one-hot
    - reach (0, 1], get this by normalizing by 3067
    - budget (0, 1], get this by normalizing by ??
    - days left in campaign (0, 1], get this by normalizing by 10
    - current day, one hot

Output - vector of size (20):
    - the bids [0, 1] for each of the 20 segments
    - limits

Loss Function
    - profit